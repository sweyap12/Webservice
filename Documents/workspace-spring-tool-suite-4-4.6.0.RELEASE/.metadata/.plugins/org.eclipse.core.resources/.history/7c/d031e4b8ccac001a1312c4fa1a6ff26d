package test.courseapi;

import static org.junit.jupiter.api.Assertions.*;

import org.json.JSONException;
import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;
import org.junit.jupiter.api.Test;
import org.junit.runner.RunWith;
import org.skyscreamer.jsonassert.JSONAssert;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.autoconfigure.web.servlet.WebMvcTest;
import org.springframework.boot.test.mock.mockito.MockBean;
import org.springframework.http.MediaType;
import org.springframework.test.web.servlet.MockMvc;
import org.springframework.test.web.servlet.MvcResult;
import org.springframework.test.web.servlet.RequestBuilder;
import org.springframework.test.web.servlet.request.MockMvcRequestBuilders;

import com.google.gson.Gson;
import com.google.gson.reflect.TypeToken;

import Test.courseapi.Employee;
import Test.courseapi.EmployeeService;
import Test.courseapi.TopicController;

import static org.mockito.Mockito.*;

import java.io.Reader;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
class ServiceMockito {
	@MockBean
    private EmployeeService employeeService;
	
	
	@Autowired
	private EmployeeService empService=new  EmployeeService();	
	
	
//	@Autowired
//    private MockMvc mockMvc;
	

	    @Test
	    public void testRetrieveProjecteDetails() throws Exception {
	    	
	    	 String expected_json_string ="{\\\"AllEmployeeDetails\\\":[{\\\"id\\\":\\\"1\\\",\\\"name\\\":\\\"A\\\"},{\\\"id\\\":\\\"2\\\",\\\"name\\\":\\\"B\\\"},{\\\"id\\\":\\\"4\\\",\\\"name\\\":\\\"C\\\"}]";
				
	    		
			
	    	 JSONObject actual_json = new JSONObject();
	    	 actual_json =empService.getemployees();
	    	 
	    	 
	    	//TopicController Mockito = mock(TopicController.class);
	    	Map<String, Object> retMap = new Gson().fromJson(
	        		expected_json_string, new TypeToken<HashMap<String, Object>>() {}.getType()
	        	);
	      System.out.println(actual_json);
	       
	    	
	        // Creating a JSON object
	        JSONObject jsonobj = new JSONObject();
	        jsonobj.putAll(retMap);
	        
	        
	        
	       
	        System.out.println(jsonobj);
	       assertEquals(actual_json, jsonobj);
	    }
	
}

